#include <stdafx.h>
#include <gl\glut.h>
#include <math.h>

float WinWid=1000.0;
float WinHei=400.0;
int q=0;
int z=0;
int g=0;
int s=1;
int d=0;
int e=0;
int r=0,q1=0,q2=0,q3=0,q4=0;
int t=0;
double l=0;
int m=0;
int f=0,jk=0;
int u=0;
int o=0,zx=0,pd=0,zd=0;
void Draw()
{
glClear(GL_COLOR_BUFFER_BIT);
glColor3f(1.0,1.0,1.0);
glBegin(GL_LINE_LOOP); 

 for(int i = 0; i < 30; i++) //колесол
 { 
  float angle = 2.0 * 3.1415926 * float(i) / 30; 

  float dx = 10 * cosf(angle);
  float dy = 10 * sinf(angle);

  glVertex2f(130 + dx+q+m, 30 + dy+l*0.5+f*2);//1
}

 glEnd(); 
 glBegin(GL_LINE_LOOP); 

 for(int i = 0; i < 30; i++) //колесоп
 { 
  float angle = 2.0 * 3.1415926 * float(i) / 30; 

  float dx = 10 * cosf(angle);
  float dy = 10 * sinf(angle);

  glVertex2f(180 + dx+q+m, 30 + dy+l*0.5);
} glEnd();

  glBegin(GL_LINE_LOOP); //машинка
  glVertex2f(140+q+m,30+l*0.5+f*2);//2 між колесами
   glVertex2f(170+q+m,30+l*0.5);//2
    glEnd(); 
glBegin(GL_LINE_LOOP);
glVertex2f(210+q+m,30+l*0.5-f*1.5);//7 спереду колеса
   glVertex2f(190+q+m,30+l*0.5);//7
glEnd(); 
glBegin(GL_LINE_LOOP);
glVertex2f(210+q+m,30+l*0.5-f);
glVertex2f(210+q+m,45+l*0.5-f*2); // перед
  glEnd(); 
glBegin(GL_LINE_LOOP);
glVertex2f(210+q+m,45+l*0.5-f*2);//3
glVertex2f(100+q+m,45+l*0.5+f*4);//3 лінія під кабіною
 glEnd(); 
 glBegin(GL_LINE_LOOP);
glVertex2f(100+q+m,45+l*0.5+f*3.7);//4 зад
   glVertex2f(100+q+m,30+l*0.5+f*4);//4
glEnd(); 
glBegin(GL_LINE_LOOP);
glVertex2f(100+q+m,30+l*0.5+f*4);//5 лінія ззаду колеса
   glVertex2f(120+q+m,30+l*0.5+f*3);//5
glEnd(); 
glBegin(GL_LINE_LOOP);
glVertex2f(155+q+m,65+l*0.5+f*2);//6 зад кабіни
   glVertex2f(155+q+m,45+l*0.5+f);//6
glEnd(); 
glBegin(GL_LINE_LOOP);
glVertex2f(155+q+m,65+l*0.5+f*2);// криша
   glVertex2f(190+q+m,65+l*0.5);
glEnd();
glBegin(GL_LINE_LOOP);
glVertex2f(190+q+m,65+l*0.5);//зад криші
   glVertex2f(190+q+m,45+l*0.5);
glEnd();

glBegin(GL_LINE_LOOP); //качеля

 for(int i = 0; i < 30; i++) 
 { 
  float angle = 2.0 * 3.1415926 * float(i) / 30; 

  float dx = 12 * cosf(angle);
  float dy = 12 * sinf(angle);

  glVertex2f(500 + dx, 35 + dy);
} glEnd();
 glBegin(GL_LINES); 
  glVertex2f(360,50-z*0.5+u+o);
  glVertex2f(640,50+z*0.5+u-o);
  glVertex2f(640,50+z*0.5+u-o);
  glVertex2f( 640,46+z*0.5+u-o);
  glVertex2f( 640,46+z*0.5+u-o);
  glVertex2f(360,46-z*0.5+u+o);
  glVertex2f(360,46-z*0.5+u+o);
  glVertex2f(360,50-z*0.5+u+o); 
  glEnd();

glBegin(GL_LINES);  //земля
  glVertex2f(10,20);
  glVertex2f(990,20);
  glVertex2f(990,20);
  glVertex2f( 990,15);
  glVertex2f( 990,15);
  glVertex2f(10,15);
  glVertex2f(10,15);
  glVertex2f(10,20);  
 glEnd();

glBegin(GL_LINES);
   glVertex2f(820,20+(0.05*jk));//стовп
  glVertex2f(820+pd,200+zd);
  glVertex2f(820+pd,200+zd);
  glVertex2f( 825+pd,200+zd);
  glVertex2f( 825+pd,200+zd);
  glVertex2f(825,20);   
glEnd();
glBegin(GL_LINES); //вер
  glVertex2f(780+pd,205+zd-(0.4*zd));
  glVertex2f(860+pd,205+(0.7*zd)+(0.6*zd));
  glVertex2f(860+pd,205+(0.7*zd)+(0.6*zd));
  glVertex2f( 860+pd,200+(0.7*zd)+(0.6*zd));
  glVertex2f( 860+pd,200+(0.7*zd)+(0.6*zd));
  glVertex2f(780+pd,200+zd-(0.4*zd));
  glVertex2f(780+pd,200+zd-(0.4*zd));
  glVertex2f(780+pd,205+zd-(0.4*zd)); 
  glEnd();
glBegin(GL_LINES); //лг
  glVertex2f(780+pd,200+zd-(0.4*zd));
  glVertex2f(785+pd,200+zd-(0.4*zd));
  glVertex2f(785+pd,200+zd-(0.4*zd));
  glVertex2f( 785+pd,190+zd-(0.4*zd));
  glVertex2f( 785+pd,190+zd-(0.4*zd));
  glVertex2f(780+pd,190+zd-(0.4*zd));
  glVertex2f(780+pd,190+zd-(0.4*zd));
  glVertex2f(780+pd,200+zd-(0.4*zd)); 
  glEnd();
glBegin(GL_LINES); //пг
  glVertex2f(855+pd,200+(0.7*zd)+(0.6*zd));
  glVertex2f(860+pd,200+(0.7*zd)+(0.6*zd));
  glVertex2f(860+pd,200+(0.7*zd)+(0.6*zd));
  glVertex2f( 860+pd,190+(0.7*zd)+(0.6*zd));
  glVertex2f( 860+pd,190+(0.7*zd)+(0.6*zd));
  glVertex2f(855+pd,190+(0.7*zd)+(0.6*zd));
  glVertex2f(855+pd,190+(0.7*zd)+(0.6*zd));
  glVertex2f(855+pd,200+(0.7*zd)+(0.6*zd)); 
  glEnd();
  glBegin(GL_LINES); //плафони
  glVertex2f(770*s,(190+g)*s);
  glVertex2f(795*s,(190+g)*s);
  glVertex2f(795*s,(190+g)*s);
  glVertex2f( 795*s,(175+g)*s);
  glVertex2f( 795*s,(175+g)*s);			
  glVertex2f(770*s,(175+g)* s);
  glVertex2f(770*s,(175+g)*s);
  glVertex2f(770*s,(190+g)*s); 
    glEnd();
    glBegin(GL_LINES); 
  glVertex2f(845+zx,(190+g));
  glVertex2f(870+zx,(190+g));
  glVertex2f(870+zx,(190+g));
  glVertex2f( 870+zx,(175+g));
  glVertex2f( 870+zx,(175+g));
  glVertex2f(845+zx,(175+g));
  glVertex2f(845+zx,(175+g));
  glVertex2f(845+zx,(190+g)); 
    glEnd();
	glPolygonMode (GL_BACK, GL_LINE);//лівий плафон розбитий
	glBegin(GL_QUADS);
	glVertex2f((770*e)-r,((20*e)+r)+t);
	glVertex2f((770*e)-r,((35*e)+r)+t);
	glVertex2f((782.5*e)-r,((35*e)+r)+t);
	glVertex2f((782.5*e)-r,((20*e)+r)+t);
	glEnd();
	glBegin(GL_QUADS);
	glVertex2f((782.5*e)+r,(20*e)+r);
	glVertex2f((782.5*e)+r,(35*e)+r);
	glVertex2f((795*e)+r,(35*e)+r);
	glVertex2f((795*e)+r,(20*e)+r);
	glEnd();
	    glBegin(GL_LINES); 
glVertex2f(780,175*q1);//штрихпунктир
  glVertex2f(780,155*q1);
glEnd();
 glBegin(GL_LINES); 
glVertex2f(860,175*q1);
  glVertex2f(860,155*q1);
glEnd();

 glBegin(GL_LINES); 
glVertex2f(780,135*q2);
  glVertex2f(780,115*q2);
glEnd();
 glBegin(GL_LINES); 
glVertex2f(860,135*q2);
  glVertex2f(860,115*q2);
glEnd();
glBegin(GL_LINES); 
glVertex2f(780,95*q3);
  glVertex2f(780,75*q3);
glEnd();
 glBegin(GL_LINES); 
glVertex2f(860,95*q3);
  glVertex2f(860,75*q3);
glEnd();
glBegin(GL_LINES); 
glVertex2f(780,55*q4);
  glVertex2f(780,35*q4);
glEnd();
 glBegin(GL_LINES); 
glVertex2f(860,55*q4);
  glVertex2f(860,35*q4);
glEnd();
glutSwapBuffers();
}


void Timer(int)
{if(q<150){q+=3;}//рух машинки
if(q<150){u=0;}
if(z<50){z+=1;}//опускання качелі
if(q>146&g>-155){g-=3;}//рух по качелі
if(g<-150){s=0;}//розбиття плафонів
if(s<=0){d=1;}//
if(d>=1){e=1.0;}//
if(e>=1.0){r+=5;}//
if(r>=200){t-=6;}//
if(g<-1&l<60){l+=1;}//
if(g<-1&m<420){m+=3;}//
if(g<-1){f=-2.7;}//


if(m>165&o<50){o+=2;}//

if(m>205&f<0.5){f+=1.5;}//
if(m>185){f+=3;}//
if(m>190&l>-1){l-=2.015;}//
if(m>360){f=0;}//
if(m>417){q+=4;}//рух машинки від жардини до ліхтаря
if(q>220){zx+=8;}//
if(q>190&q<370){pd+=5;}//
if(q>190&q<560){zd-=2;jk+=1;}//падіння ліхтаря
if(g<-30){q1=1;}//
if(g<-70){q2=1;}//
if(g<-110){q3=1;}//
if(g<-140){q4=1;}//
if(g<-150){q1=0;q2=0;q3=0;q4=0;}//
Draw();


glutTimerFunc(75,Timer,0);
}

void Initialize()
{
glClearColor(0.5,0.5,0.5,1.0);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
glOrtho(0,WinWid,0,WinHei,-200.0,200.0);
glMatrixMode(GL_MODELVIEW);
}

int main(int argc,char** argv)
{
glutInit(&argc,argv);
glutInitDisplayMode(GLUT_DOUBLE|GLUT_RGB);
glutInitWindowSize(WinWid,WinHei);
glutInitWindowPosition(100,200);
glutCreateWindow("I_Pro");
//reg
glutDisplayFunc(Draw);
glutTimerFunc(75,Timer,0);
Initialize();
glutMainLoop();

return 0;
}


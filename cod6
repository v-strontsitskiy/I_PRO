#include <stdafx.h>
#include <gl\glut.h>
#include <math.h>

float WinWid=1000.0;
float WinHei=400.0;
int movecar=0;
int lowering_shoulder_left=0;
int drop_light=0;
int disappearance_left_lamps=1;
int appearance_2_left_lamp=0;
int flying_lantern_parts=0;
int Flight_lantern_down=0;
double car_up=0;
int movement_on_shoulder=0;
int turn_machine_at_angle_relative_shoulder=0;
int lowering_shoulder_right=0;
int departure_right_lamp=0;
int drop_column_x=0;
int drop_column_y=0;
int drop_column_y_on_ernth=0;
int drawing_dotter_bar1=0;
int drawing_dotter_bar2=0;
int drawing_dotter_bar3=0;
int drawing_dotter_bar4=0;

void Draw()
{
glClear(GL_COLOR_BUFFER_BIT);                                        //параметри малювання
glColor3f(1.0,1.0,1.0);
glBegin(GL_LINE_LOOP); 



                                                                                 //СТОВП З ЛІХТАРЯМИ


glBegin(GL_LINES);
   glVertex2f(820,20+(0.05*drop_column_y_on_ernth));                             //стовп
  glVertex2f(820+drop_column_x,200+drop_column_y);
  glVertex2f(820+drop_column_x,200+drop_column_y);
  glVertex2f( 825+drop_column_x,200+drop_column_y);
  glVertex2f( 825+drop_column_x,200+drop_column_y);
  glVertex2f(825,20);   
glEnd();

glBegin(GL_LINES);                                                               //верхня частина
  glVertex2f(780+drop_column_x,205+drop_column_y-(0.4*drop_column_y));
  glVertex2f(860+drop_column_x,205+(0.7*drop_column_y)+(0.6*drop_column_y));
  glVertex2f(860+drop_column_x,205+(0.7*drop_column_y)+(0.6*drop_column_y));
  glVertex2f( 860+drop_column_x,200+(0.7*drop_column_y)+(0.6*drop_column_y));
  glVertex2f( 860+drop_column_x,200+(0.7*drop_column_y)+(0.6*drop_column_y));
  glVertex2f(780+drop_column_x,200+drop_column_y-(0.4*drop_column_y));
  glVertex2f(780+drop_column_x,200+drop_column_y-(0.4*drop_column_y));
  glVertex2f(780+drop_column_x,205+drop_column_y-(0.4*drop_column_y)); 
  glEnd();

glBegin(GL_LINES);                                                            //ліве кріплення ліхтаря
  glVertex2f(780+drop_column_x,200+drop_column_y-(0.4*drop_column_y));
  glVertex2f(785+drop_column_x,200+drop_column_y-(0.4*drop_column_y));
  glVertex2f(785+drop_column_x,200+drop_column_y-(0.4*drop_column_y));
  glVertex2f( 785+drop_column_x,190+drop_column_y-(0.4*drop_column_y));
  glVertex2f( 785+drop_column_x,190+drop_column_y-(0.4*drop_column_y));
  glVertex2f(780+drop_column_x,190+drop_column_y-(0.4*drop_column_y));
  glVertex2f(780+drop_column_x,190+drop_column_y-(0.4*drop_column_y));
  glVertex2f(780+drop_column_x,200+drop_column_y-(0.4*drop_column_y)); 
  glEnd();

glBegin(GL_LINES);                                                               //праве кріплення ліхтаря
  glVertex2f(855+drop_column_x,200+(0.7*drop_column_y)+(0.6*drop_column_y));
  glVertex2f(860+drop_column_x,200+(0.7*drop_column_y)+(0.6*drop_column_y));
  glVertex2f(860+drop_column_x,200+(0.7*drop_column_y)+(0.6*drop_column_y));
  glVertex2f( 860+drop_column_x,190+(0.7*drop_column_y)+(0.6*drop_column_y));
  glVertex2f( 860+drop_column_x,190+(0.7*drop_column_y)+(0.6*drop_column_y));
  glVertex2f(855+drop_column_x,190+(0.7*drop_column_y)+(0.6*drop_column_y));
  glVertex2f(855+drop_column_x,190+(0.7*drop_column_y)+(0.6*drop_column_y));
glVertex2f(855+drop_column_x,200+(0.7*drop_column_y)+(0.6*drop_column_y)); 
  glEnd();

  glBegin(GL_LINES);                                                                    //лівий ліхтар
  glVertex2f(770*disappearance_left_lamps,(190+drop_light)*disappearance_left_lamps);
  glVertex2f(795*disappearance_left_lamps,(190+drop_light)*disappearance_left_lamps);
  glVertex2f(795*disappearance_left_lamps,(190+drop_light)*disappearance_left_lamps);
  glVertex2f( 795*disappearance_left_lamps,(175+drop_light)*disappearance_left_lamps);
  glVertex2f( 795*disappearance_left_lamps,(175+drop_light)*disappearance_left_lamps);                        
  glVertex2f(770*disappearance_left_lamps,(175+drop_light)* disappearance_left_lamps);
  glVertex2f(770*disappearance_left_lamps,(175+drop_light)*disappearance_left_lamps);
  glVertex2f(770*disappearance_left_lamps,(190+drop_light)*disappearance_left_lamps); 
    glEnd();

    glBegin(GL_LINES);                                                               //правий ліхтар
  glVertex2f(845+departure_right_lamp,(190+drop_light));
  glVertex2f(870+departure_right_lamp,(190+drop_light));
  glVertex2f(870+departure_right_lamp,(190+drop_light));
  glVertex2f( 870+departure_right_lamp,(175+drop_light));
  glVertex2f( 870+departure_right_lamp,(175+drop_light));
  glVertex2f(845+departure_right_lamp,(175+drop_light));
  glVertex2f(845+departure_right_lamp,(175+drop_light));
  glVertex2f(845+departure_right_lamp,(190+drop_light)); 
    glEnd();

        glPolygonMode (GL_BACK, GL_LINE);                                  //розбитий лівий ліхтар ліва частина
        glBegin(GL_QUADS);
        glVertex2f((770*appearance_2_left_lamp)-flying_lantern_parts,((20*appearance_2_left_lamp)+flying_lantern_parts)+Flight_lantern_down);
        glVertex2f((770*appearance_2_left_lamp)-flying_lantern_parts,((35*appearance_2_left_lamp)+flying_lantern_parts)+Flight_lantern_down);
        glVertex2f((782.5*appearance_2_left_lamp)-flying_lantern_parts,((35*appearance_2_left_lamp)+flying_lantern_parts)+Flight_lantern_down);
        glVertex2f((782.5*appearance_2_left_lamp)-flying_lantern_parts,((20*appearance_2_left_lamp)+flying_lantern_parts)+Flight_lantern_down);
        glEnd();

        glBegin(GL_QUADS);                                                //розбитий лівий ліхтар права частина
        glVertex2f((782.5*appearance_2_left_lamp)+flying_lantern_parts,(20*appearance_2_left_lamp)+flying_lantern_parts);
        glVertex2f((782.5*appearance_2_left_lamp)+flying_lantern_parts,(35*appearance_2_left_lamp)+flying_lantern_parts);
        glVertex2f((795*appearance_2_left_lamp)+flying_lantern_parts,(35*appearance_2_left_lamp)+flying_lantern_parts);
        glVertex2f((795*appearance_2_left_lamp)+flying_lantern_parts,(20*appearance_2_left_lamp)+flying_lantern_parts);
        glEnd();
           
        
                                                                  //ШТРИХПУНКТИР

        
        glBegin(GL_LINES); 
glVertex2f(780,175*drawing_dotter_bar1);
  glVertex2f(780,155*drawing_dotter_bar1);
glEnd();
 glBegin(GL_LINES); 
glVertex2f(860,175*drawing_dotter_bar1);
  glVertex2f(860,155*drawing_dotter_bar1);
glEnd();
glBegin(GL_LINES); 
glVertex2f(780,135*drawing_dotter_bar2);
  glVertex2f(780,115*drawing_dotter_bar2);
glEnd();
 glBegin(GL_LINES); 
glVertex2f(860,135*drawing_dotter_bar2);
  glVertex2f(860,115*drawing_dotter_bar2);
glEnd();
glBegin(GL_LINES); 
glVertex2f(780,95*drawing_dotter_bar3);
  glVertex2f(780,75*drawing_dotter_bar3);
glEnd();
 glBegin(GL_LINES); 
glVertex2f(860,95*drawing_dotter_bar3);
  glVertex2f(860,75*drawing_dotter_bar3);
glEnd();
glBegin(GL_LINES); 
glVertex2f(780,55*drawing_dotter_bar4);
  glVertex2f(780,35*drawing_dotter_bar4);
glEnd();
 glBegin(GL_LINES); 
glVertex2f(860,55*drawing_dotter_bar4);
  glVertex2f(860,35*drawing_dotter_bar4);
glEnd();
glutSwapBuffers();
}





void Timer(int)
{if(movecar<150){movecar+=3;}                                               //рух машинки дот качелі
if(lowering_shoulder_left<50){lowering_shoulder_left+=1;}                   //опускання плеча качелі вліво
if(movecar>146&drop_light>-155){drop_light-=3;}                             //падіння ліхтапрів
if(drop_light<-150){disappearance_left_lamps=0;}                            //прибираємо лівий ліхтар
if(disappearance_left_lamps<=0){appearance_2_left_lamp=1.0;}                //створюємо дві частини замісь лівого ліхтаря
if(appearance_2_left_lamp>=1.0){flying_lantern_parts+=5;}                   //розлітання частинок ліхтарів під кутом вверх
if(flying_lantern_parts>=200){Flight_lantern_down-=6;}                      //політ лівої частинки під кутом вниз
if(drop_light<-1&car_up<60){car_up+=1;}                                     //підйом машинки відносно плеча качелі
if(drop_light<-1&movement_on_shoulder<420){movement_on_shoulder+=3;}        //рух по плечі качелі
if(drop_light<-1){turn_machine_at_angle_relative_shoulder=-3;}              //поворот машинки на кут вліво відносно качелі
if(movement_on_shoulder>165&lowering_shoulder_right<50){lowering_shoulder_right+=2;} //опускання плеча качелі впаво
if(movement_on_shoulder>205&turn_machine_at_angle_relative_shoulder<0.5){turn_machine_at_angle_relative_shoulder+=1.5;}     //вирівнювання машинки посередині качелі
if(movement_on_shoulder>185){turn_machine_at_angle_relative_shoulder+=3;}  //поворот машинки на кут вправо відносно качелі
if(movement_on_shoulder>190&car_up>-1){car_up-=2;}                         //опусканя машинки відносно плеча качелі
if(movement_on_shoulder>360){turn_machine_at_angle_relative_shoulder=0;}   //вирівнюємо машинку відносно горизонту
if(movement_on_shoulder>417){movecar+=3;}                                   //рух машинки від качелі до кінця екрану
if(movecar>220){departure_right_lamp+=7;}                                   //виліт вправо правого ліхтаря після удару машинкою
if(movecar>190&movecar<370){drop_column_x+=5;}                              //падіння стовпа відносно осі x
if(movecar>190&movecar<560){drop_column_y-=2;drop_column_y_on_ernth+=1;}    //падіння ліхтаря відносно осі y
if(drop_light<-30){drawing_dotter_bar1=1;}                                  //поява штрихпунктирів 1
if(drop_light<-70){drawing_dotter_bar2=1;}                                  //поява штрихпунктирів 2
if(drop_light<-110){drawing_dotter_bar3=1;}                                 //поява штрихпунктирів 3
if(drop_light<-145){drawing_dotter_bar4=1;}                                 //поява штрихпунктирів 4
if(drop_light<-150){drawing_dotter_bar1=0;drawing_dotter_bar2=0;drawing_dotter_bar3=0;drawing_dotter_bar4=0;} //зникнення штрихпунктирів
Draw();
glutTimerFunc(75,Timer,0);
}




void Initialize()             //ініціалізація фрну вікна і осей координат
{
glClearColor(0.5,0.5,0.5,1.0);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
glOrtho(0,WinWid,0,WinHei,-200.0,200.0);
glMatrixMode(GL_MODELVIEW); 
}



int main(int argc,char** argv)
{
glutInit(&argc,argv);                 //параметри вікна
glutInitDisplayMode(GLUT_DOUBLE|GLUT_RGB);
glutInitWindowSize(WinWid,WinHei);
glutInitWindowPosition(100,200);
glutCreateWindow("I_Pro");

glutDisplayFunc(Draw);               //реєстрація функцій
glutTimerFunc(75,Timer,0);
Initialize();
glutMainLoop();
return 0;
}
